# ----------------------------------------------------------------------
# deemix container

function deemix_docker_start {
  __base_docker_container_start "deemix"
  echo "Navigating to http://localhost:6595"
  chromium http://localhost:6595 &>/dev/null || firefox http://localhost:6595 >/dev/null
}

function deemix_docker_stop {
  __base_docker_container_stop "deemix" $1
}


# Run `id $USER` to find uid and gid - needed for file permissions
#
# sudo docker run -d --name deemix \
#                 -v ~/Music/deemix-downloads/:/downloads \
#                 -e PUID=1000 \
#                 -e PGID=100 \
#                 -e ARL=_ARL_ \
#                 -e UMASK_SET=022 \
#                 -e DEEZUI=false \
#                 -p 6595:6595 \
#                 registry.gitlab.com/bockiii/deemix-docker


# ----------------------------------------------------------------------
# Base docker

function __base_docker_container_start {
  sudo echo "require credentials first" &>/dev/null

  containerName=$1
  if [ "$(sudo docker container inspect -f '{{.State.Running}}' $containerName 2>/dev/null)" = "true" ]; then
    echo "$containerName container is already running."
    return
  fi

  if ! sudo pgrep dockerd >/dev/null; then
    echo "Starting docker daemon."
    sudo nohup dockerd &
    sleep 2
  fi

  echo "Starting $containerName container..."

  containerStarted=false
  while ! $containerStarted; do
    sudo docker container start $containerName &>/dev/null && containerStarted=true
    sleep 2
  done

  echo "$containerName container successfully started."
}

function __base_docker_container_stop {
  sudo echo "require credentials first" &>/dev/null

  containerName=$1
  stopDocker=$2
  if [ -z $stopDocker ]; then
    echo "Stop docker? All containers will exit. [y/n]"
    echo -n "> "
    read stopDocker
  fi
  stopDocker=$stopDocker | tr '[:upper:]' '[:lower:]'

  if [ $stopDocker = "yes" ] ||  [ $stopDocker = "y" ] ||  [ $stopDocker = "-y" ]; then
    if pgrep dockerd >/dev/null; then
      echo "Stopping docker daemon."
      sudo docker stop $(sudo docker ps -q)
      sudo pkill dockerd &>/dev/null
    else
      echo "Docker daemon is not running. Nothing to stop."
    fi

    return
  fi

  if [ $stopDocker = "no" ] ||  [ $stopDocker = "n" ] ||  [ $stopDocker = "-n" ]; then
    if [ "$(sudo docker container inspect -f '{{.State.Running}}' $containerName 2>/dev/null)" = "true" ]; then
      echo "Stopping $containerName container."
      sudo docker container stop $containerName &>/dev/null
    else
      echo "$containerName container is not running. Nothing to stop."
    fi

    return
  fi

  echo "Command cancelled."
}
